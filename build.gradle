plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jacoco {
    toolVersion = '0.8.12'
    reportsDirectory = layout.projectDirectory.file("jacoco").asFile
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = false
        xml.required = true
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true

            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            excludes = [
                "*.dao.*",
                "*.config.*",
                "*.dto.*",
                "*.common.*",
                "*Application*"
            ]
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

//    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // file io
    implementation 'commons-io:commons-io:2.16.1'

}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

test {
    jacoco {
        destinationFile = layout.projectDirectory.file("jacoco/${name}.exec").asFile
    }
}
